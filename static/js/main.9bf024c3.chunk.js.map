{"version":3,"sources":["TopPanel.js","List.js","Map.js","dummydata.js","App.js","serviceWorker.js","index.js"],"names":["TopPanel","props","updateSearchPhrase","phrase","setState","searchPhrase","keyPressed","e","key","preventDefault","getData","componentDidMount","query","state","url","process","fetch","then","response","json","data","console","log","setData","catch","error","bind","className","Container","style","fontWeight","Form","display","margin","verticalAlign","Group","Control","minWidth","onChange","target","value","onKeyPress","this","id","type","placeholder","Button","onClick","Dropdown","Toggle","variant","Menu","map","field","Item","setSort","Component","List","arrangeList","sortField","mutatedList","restaurants","filter","place","opening_hours","open_now","sortFunc","place2","parseInt","price_level","parseFloat","rating","slice","sort","prevProps","textAlign","Accordion","activeKey","displayRestaurantIndex","toString","restaurant","Card","Header","as","eventKey","indexOf","setDisplayIndex","name","repeat","Collapse","Body","vicinity","undefined","RestaurantMap","changeDisplayRestaurant","rest","displayRestaurant","Map","center","zoom","height","width","Popup","position","geometry","location","lat","lng","onClose","TileLayer","attribution","Marker","dummyData","App","new_data","status","results","passSearchInput","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9bf024c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nimport './TopPanel.css';\r\n\r\nconst GOOGLE_API_KEY = process.env.REACT_APP_LAUNCH_API_KEY;\r\nconst LOCATION = \"38.0293,-78.4767\" // Charlottesville coordinates\r\nconst RADIUS = 5000 // 5 kilometers\r\n\r\nexport default class TopPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchPhrase: \"\",\r\n        }\r\n        this.updateSearchPhrase = this.updateSearchPhrase.bind(this);\r\n    }\r\n\r\n    updateSearchPhrase = (phrase) => {\r\n        this.setState({\r\n            searchPhrase: phrase\r\n        });\r\n    }\r\n\r\n    keyPressed = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            // console.log(e.target.value);\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData(); // fills list w/ top 20 restaurants in Cville (no search param)\r\n    }\r\n\r\n    getData = () => {\r\n        const query = this.state.searchPhrase;\r\n\r\n        // console.log(query);\r\n        const url = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=${GOOGLE_API_KEY}&radius=${RADIUS}&location=${LOCATION}&type=restaurant&keyword=${query}`;\r\n\r\n        fetch(url)\r\n            .then(\r\n                response => response.json()\r\n            ).then(\r\n                data => {\r\n                    console.log(data);\r\n                    this.props.setData(data);\r\n                }\r\n            ).catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const sortVars = [\"Prominence\",\r\n            \"Price (Lowest to Highest)\",\r\n            \"Price (Highest to Lowest)\",\r\n            \"Rating\",\r\n            \"Open Now\"]\r\n        return (\r\n            <div className=\"topPanel\">\r\n                <Container className=\"TopPanel\">\r\n                    <h1 style={{ fontWeight: \"heavy\" }}>Charlottesville Restaurant Search</h1>\r\n                        <Form style={{ display: \"inline-block\", margin: \"5px\", verticalAlign: \"middle\" }}>\r\n                            <Form.Group>\r\n                                <Form.Control \r\n                                    style={{minWidth: \"300px\"}}\r\n                                    onChange={(e) => this.updateSearchPhrase(e.target.value)}\r\n                                    onKeyPress={this.keyPressed}\r\n                                    id=\"SearchText\"\r\n                                    className=\"SearchBar\"\r\n                                    type=\"textarea\"\r\n                                    placeholder=\"Search for Charlottesville restaurants\" />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Button style={{ display: \"inline-block\", margin: \"5px\", verticalAlign: \"middle\" }} onClick={this.getData}>Search</Button>\r\n\r\n                        <Dropdown style={{ display: \"inline-block\", margin: \"5px\", verticalAlign: \"middle\" }}>\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Sort by...</Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                {sortVars.map(field => {\r\n                                    return <Dropdown.Item onClick={() => this.props.setSort(field)}>{field}</Dropdown.Item>\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                </Container>\r\n            </div >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mutatedList: []\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.sortField !== prevProps.sortField) {\r\n            this.arrangeList();\r\n            console.log(\"changing sortfield\")\r\n        }\r\n        if (this.props.restaurants !== prevProps.restaurants) {\r\n            this.setState({ mutatedList: this.props.restaurants })\r\n            console.log(\"changing data\")\r\n        }\r\n    }\r\n\r\n    arrangeList = () => {\r\n        let field = this.props.sortField;\r\n        if (field === \"Prominence\") {\r\n            this.setState({ mutatedList: this.props.restaurants });\r\n        }\r\n        else if (field === \"Open Now\") {\r\n            this.setState({ mutatedList: this.props.restaurants.filter(place => place.opening_hours != null && place.opening_hours.open_now) })\r\n        }\r\n        else {\r\n            let sortFunc;\r\n            switch (field) {\r\n                case \"Price (Lowest to Highest)\":\r\n                    sortFunc = (place, place2) => {\r\n                        // console.log(\"sorting\")\r\n                        let price1 = parseInt(place.price_level) || 1000;\r\n                        let price2 = parseInt(place2.price_level) || 1000\r\n                        // console.log(i + \" \" + i2);\r\n                        return price1 - price2 // low price first\r\n                    }\r\n                    break;\r\n                case \"Price (Highest to Lowest)\":\r\n                    sortFunc = (place, place2) => {\r\n                        // console.log(\"sorting\")\r\n                        let price1 = parseInt(place.price_level) || -10;\r\n                        let price2 = parseInt(place2.price_level) || -10;\r\n                        // console.log(i + \" \" + i2);\r\n                        return -(price1 - price2) // high price first\r\n                    }\r\n                    break;\r\n                case \"Rating\":\r\n                    sortFunc = (place, place2) => {\r\n                        let rating1 = parseFloat(place.rating) || -10;\r\n                        let rating2 = parseFloat(place2.rating) || -10;\r\n                        return -(rating1 - rating2); // highest comes first\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log(\"no sort possible\")\r\n            }\r\n            this.setState({ mutatedList: this.props.restaurants.slice().sort(sortFunc) });\r\n        }\r\n    }\r\n    render() {\r\n        let count = 0;\r\n        return <div className=\"list\" style={{ textAlign: \"left\" }}>\r\n            <Accordion activeKey={this.props.displayRestaurantIndex != null ? this.props.displayRestaurantIndex.toString() : null}>\r\n                {this.state.mutatedList.map(restaurant => {\r\n                    return (\r\n                        <Card key={restaurant.id}>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle \r\n                                as={Button} \r\n                                variant=\"link\" \r\n                                eventKey={this.props.restaurants.indexOf(restaurant).toString()}\r\n                                onClick={(e) => {this.props.setDisplayIndex(this.props.restaurants.indexOf(restaurant))}}\r\n                                >\r\n                                    {restaurant.name} {restaurant.price_level != null ? \"- \" + \"$\".repeat(restaurant.price_level) : \"\"}\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={this.props.restaurants.indexOf(restaurant).toString()}>\r\n                                <Card.Body>\r\n                                    Rating - {restaurant.rating}\r\n                                    <br />Location - {restaurant.vicinity}\r\n                                    <br />{(restaurant.opening_hours !== null && restaurant.opening_hours !== undefined) ?\r\n                                        restaurant.opening_hours ? \"Open now\" : \"Currently closed\" : \"\"}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </Accordion>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\n// import \r\n\r\nexport default class RestaurantMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // displayRestaurant: null,\r\n        }\r\n    }\r\n\r\n    changeDisplayRestaurant = (rest) => {\r\n        this.setState({\r\n            displayRestaurant: rest\r\n        })\r\n        this.props.setDisplayIndex(this.props.restaurants.indexOf(rest))\r\n    }\r\n\r\n    //map.setView(new L.LatLng(38.0293, -78.4767),9);\r\n    render() {\r\n        const restaurants = this.props.restaurants;\r\n        // console.log(this.props.displayRestaurant);\r\n        return <Map className=\"map\" center={[38.0293, -78.4767]} zoom={14} style={{ height: \"85vh\", width: \"100%\" }}>\r\n            {this.props.displayRestaurant !== null && this.props.displayRestaurant !== undefined && <Popup\r\n                position={[\r\n                    this.props.displayRestaurant.geometry.location.lat,\r\n                    this.props.displayRestaurant.geometry.location.lng\r\n                ]}\r\n                onClose={() => {\r\n                    this.changeDisplayRestaurant(null);\r\n                }}\r\n            >\r\n                <h6>{this.props.displayRestaurant.name} {this.props.displayRestaurant.price_level != null ? \"- \" + \"$\".repeat(this.props.displayRestaurant.price_level) : \"\"}</h6>\r\n                <p>{this.props.displayRestaurant.opening_hours !== null && this.props.displayRestaurant.opening_hours !== undefined ? this.props.displayRestaurant.opening_hours.open_now ? \"Open now\" : \"Currently closed\" : \"\"}\r\n                    <br />Rating - {this.props.displayRestaurant.rating} <br />\r\n                Location - {this.props.displayRestaurant.vicinity}</p></Popup>}\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {restaurants.map(restaurant => {\r\n                return <Marker\r\n                    key={restaurant.id}\r\n                    position={\r\n                        [\r\n                            restaurant.geometry.location.lat,\r\n                            restaurant.geometry.location.lng\r\n                        ]}\r\n                    onClick={() => {\r\n                        this.changeDisplayRestaurant(restaurant);\r\n                    }} />\r\n            })}\r\n        </Map>\r\n    }\r\n}","const dummyData = [\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.02989309999999,\r\n                \"lng\": -78.47547689999999\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.03116758029149,\r\n                    \"lng\": -78.47417291970849\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0284696197085,\r\n                    \"lng\": -78.4768708802915\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"e4e27f433db07955f9786c2afc40de52f394d9e0\",\r\n        \"name\": \"Guadalajara\",\r\n        \"opening_hours\": {\r\n            \"open_now\": false\r\n        },\r\n        \"photos\": [\r\n            {\r\n                \"height\": 3036,\r\n                \"html_attributions\": [\r\n                    \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/108731974968542679979\\\"\\u003eJason Gale\\u003c/a\\u003e\"\r\n                ],\r\n                \"photo_reference\": \"CmRaAAAAwwtAAU146gIfkqirIA7whXbjcrOR_uFFeAXkRXNTjYaZAxk-Z7FTf9VRmLmI6nGcsS0BJlgJrkIvgstuoy1ANLLgE9Dm6pvZMDUFRajC4auvLuoNPsCy25CSm--XjkXNEhBCtfHPYLpPn-YYjys2UjD9GhQRt8vDRRXxFOI7G6pqzPfDWfMwSg\",\r\n                \"width\": 4048\r\n            }\r\n        ],\r\n        \"place_id\": \"ChIJTyKzYieGs4kREUCGOYLpk6c\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GHF+XR Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GHF+XR\"\r\n        },\r\n        \"price_level\": 1,\r\n        \"rating\": 4.3,\r\n        \"reference\": \"ChIJTyKzYieGs4kREUCGOYLpk6c\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"user_ratings_total\": 430,\r\n        \"vicinity\": \"805 East Market Street, Charlottesville\"\r\n    },\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.0295669,\r\n                \"lng\": -78.47796000000001\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.0312143802915,\r\n                    \"lng\": -78.4767912197085\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0285164197085,\r\n                    \"lng\": -78.47948918029152\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"faf20e6a2e1d1c1bdee9c0790ea640c51348a1ea\",\r\n        \"name\": \"Himalayan Fusion\",\r\n        \"opening_hours\": {\r\n            \"open_now\": false\r\n        },\r\n        \"photos\": [\r\n            {\r\n                \"height\": 3024,\r\n                \"html_attributions\": [\r\n                    \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/115451595125996928003\\\"\\u003eAndrew Nash\\u003c/a\\u003e\"\r\n                ],\r\n                \"photo_reference\": \"CmRaAAAAOvF8pd70pFG6-QdhwcXz-lBcDtBhLDaEVC4-qjyhjlw73XSRQ5HULIOGQpnqV4gVR6QBKVr7-DtiVNyiPdGblaRtXtOd18Ez3CKyb8OxpPC6MWe9EBoZExbkxLCeJdzeEhBmOVBNGHf3DlIhwvS4uD2IGhQMqPl7o3ors_iMrW4eHBu9kEDlSg\",\r\n                \"width\": 4032\r\n            }\r\n        ],\r\n        \"place_id\": \"ChIJhWefHSeGs4kREuONhoJL21w\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GHC+RR Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GHC+RR\"\r\n        },\r\n        \"price_level\": 2,\r\n        \"rating\": 4.4,\r\n        \"reference\": \"ChIJhWefHSeGs4kREuONhoJL21w\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"user_ratings_total\": 225,\r\n        \"vicinity\": \"520 East Main Street, Charlottesville\"\r\n    },\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.0293059,\r\n                \"lng\": -78.47667810000002\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.0306548802915,\r\n                    \"lng\": -78.4753291197085\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0279569197085,\r\n                    \"lng\": -78.47802708029151\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"f8cf266a1becf5034ce18c9fa5c44bae5002699e\",\r\n        \"name\": \"Wood grill\",\r\n        \"place_id\": \"ChIJFTjpjE-Hs4kRYdAOnc-m1j8\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GHF+P8 Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GHF+P8\"\r\n        },\r\n        \"reference\": \"ChIJFTjpjE-Hs4kRYdAOnc-m1j8\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"vicinity\": \"Charlottesville\"\r\n    },\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.0293059,\r\n                \"lng\": -78.47667810000002\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.0306548802915,\r\n                    \"lng\": -78.4753291197085\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0279569197085,\r\n                    \"lng\": -78.47802708029151\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"ceef8f1f7080ab5a40a6fb9371b6380b1091a6c7\",\r\n        \"name\": \"Azteca\",\r\n        \"place_id\": \"ChIJpS2T_yaHs4kRJmEoIgiGNGA\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GHF+P8 Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GHF+P8\"\r\n        },\r\n        \"reference\": \"ChIJpS2T_yaHs4kRJmEoIgiGNGA\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"vicinity\": \"Charlottesville\"\r\n    },\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.0298817,\r\n                \"lng\": -78.4779606\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.0312800302915,\r\n                    \"lng\": -78.47679921970848\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0285820697085,\r\n                    \"lng\": -78.4794971802915\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"b293e1c62a7524b6ced92d156f9b9d1e08c5736b\",\r\n        \"name\": \"Bashir's\",\r\n        \"opening_hours\": {\r\n            \"open_now\": false\r\n        },\r\n        \"photos\": [\r\n            {\r\n                \"height\": 3024,\r\n                \"html_attributions\": [\r\n                    \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/115451595125996928003\\\"\\u003eAndrew Nash\\u003c/a\\u003e\"\r\n                ],\r\n                \"photo_reference\": \"CmRaAAAA9EKZ-cLAG0GsgD9hZ3-ASAhywdZpm-vMs6AO2L0Dv8WYfF6hreCak0nz6JBX1ZBazTStBqrcsDRfpwfLda01_SG6JndRz2oprgxiRm0IMukHDZCWfUfDSKMSePQwegR6EhAENggLA5wPp28iWgS39PNXGhTiwI4IBqzbg3HMB2uGX236k6a5Lg\",\r\n                \"width\": 4032\r\n            }\r\n        ],\r\n        \"place_id\": \"ChIJHU0E4yaGs4kRuCzvGoFNmzI\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GHC+XR Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GHC+XR\"\r\n        },\r\n        \"price_level\": 2,\r\n        \"rating\": 4.2,\r\n        \"reference\": \"ChIJHU0E4yaGs4kRuCzvGoFNmzI\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"user_ratings_total\": 42,\r\n        \"vicinity\": \"507 East Main Street, Charlottesville\"\r\n    },\r\n    {\r\n        \"business_status\": \"OPERATIONAL\",\r\n        \"geometry\": {\r\n            \"location\": {\r\n                \"lat\": 38.0303811,\r\n                \"lng\": -78.47693819999999\r\n            },\r\n            \"viewport\": {\r\n                \"northeast\": {\r\n                    \"lat\": 38.0316679302915,\r\n                    \"lng\": -78.4756239197085\r\n                },\r\n                \"southwest\": {\r\n                    \"lat\": 38.0289699697085,\r\n                    \"lng\": -78.4783218802915\r\n                }\r\n            }\r\n        },\r\n        \"icon\": \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\": \"6329a5f26091b592351081c47b690cdb3b5397aa\",\r\n        \"name\": \"Tin Whistle Pub\",\r\n        \"opening_hours\": {\r\n            \"open_now\": false\r\n        },\r\n        \"photos\": [\r\n            {\r\n                \"height\": 3024,\r\n                \"html_attributions\": [\r\n                    \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/105509553038982717852\\\"\\u003eAndrew Warren\\u003c/a\\u003e\"\r\n                ],\r\n                \"photo_reference\": \"CmRaAAAAGCS3TraqnC3CIDkGsCl52g_Dp85S3ffR5Ud6PSkk2WU36UzY3eQTo9qXzgZlbjEOIaP6HJNA15WVN5QDF6T_bp6XJMGxI5t99ZvmyVT-u1_kEFWDBUS_MHHI8rWVdea7EhBerDVb9pXXYXdvC1d1Auk0GhT8diY4ya2pDkHQudkqLEzXnmqvDg\",\r\n                \"width\": 4032\r\n            }\r\n        ],\r\n        \"place_id\": \"ChIJsbbhByeGs4kRnOf5pBSDiCQ\",\r\n        \"plus_code\": {\r\n            \"compound_code\": \"2GJF+56 Charlottesville, Virginia, United States\",\r\n            \"global_code\": \"87C32GJF+56\"\r\n        },\r\n        \"price_level\": 2,\r\n        \"rating\": 4.5,\r\n        \"reference\": \"ChIJsbbhByeGs4kRnOf5pBSDiCQ\",\r\n        \"scope\": \"GOOGLE\",\r\n        \"types\": [\"bar\", \"restaurant\", \"food\", \"point_of_interest\", \"establishment\"],\r\n        \"user_ratings_total\": 221,\r\n        \"vicinity\": \"609 East Market Street, Charlottesville\"\r\n    }\r\n]\r\n\r\nexport default dummyData;","import React, { Component } from 'react';\r\n\r\nimport TopPanel from './TopPanel';\r\nimport List from \"./List\";\r\nimport RestaurantMap from \"./Map\";\r\n\r\nimport \"bootswatch/dist/yeti/bootstrap.min.css\";\r\nimport './App.css';\r\n\r\nimport dummyData from \"./dummydata\"\r\n\r\nexport default class App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         // restaurants: [], // array (will be returned by request)\r\n         restaurants: dummyData, // failsafe in case web requests fail; should be overwritten immediately if they work\r\n         sortField: \"Prominence\", // default sort returned by Google API\r\n         displayRestaurantIndex: null\r\n      }\r\n   }\r\n\r\n   setData = (new_data) => {\r\n      // prevents setting restaurants to null data; allows sticking to default dummy data\r\n      if (new_data.status === \"OK\") {\r\n         this.setState({ restaurants: new_data.results })\r\n      }\r\n   }\r\n\r\n   setSort = (field) => {\r\n      this.setState({ sortField: field })\r\n   }\r\n\r\n   setDisplayIndex = (rest) => {\r\n      this.setState({ displayRestaurantIndex: rest })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"App\">\r\n            \r\n            <TopPanel\r\n               setData={this.setData}\r\n               passSearchInput={this.passSearchInput}\r\n               setSort={this.setSort} />\r\n            <div className=\"display\">\r\n               <List restaurants={this.state.restaurants}\r\n                  displayRestaurantIndex={this.state.displayRestaurantIndex}\r\n                  setDisplayIndex={this.setDisplayIndex}\r\n                  sortField={this.state.sortField} />\r\n               <RestaurantMap\r\n                  restaurants={this.state.restaurants}\r\n                  setDisplayIndex={this.setDisplayIndex}\r\n                  displayRestaurant={this.state.restaurants[this.state.displayRestaurantIndex]} />\r\n\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}