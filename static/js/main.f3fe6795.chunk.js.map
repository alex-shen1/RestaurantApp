{"version":3,"sources":["TopPanel.js","List.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["console","log","process","TopPanel","props","updateSearchPhrase","phrase","setState","searchPhrase","componentDidMount","getData","query","state","url","fetch","then","response","json","data","setData","catch","error","passSearchInput","SearchText","document","getElementById","value","bind","Container","className","Form","Group","Control","onChange","e","target","id","type","placeholder","Button","onClick","this","Dropdown","Toggle","variant","Menu","map","field","Item","setSort","Component","List","arrangeList","restaurants","restaurant","filter","place","opening_hours","open_now","sortFunc","place2","parseInt","price_level","parseFloat","rating","sort","count","style","textAlign","Accordion","sortField","Card","Header","as","eventKey","name","repeat","Collapse","Body","vicinity","RestaurantMap","changeDisplayRestaurant","rest","displayRestaurant","Map","center","zoom","height","width","Popup","position","geometry","location","lat","lng","onClose","TileLayer","attribution","Marker","key","App","new_data","status","results","test","display","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f3fe6795.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nimport './TopPanel.css';\r\n\r\nconst GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\nconsole.log(GOOGLE_API_KEY)\r\n\r\nexport default class TopPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchPhrase: \"\",\r\n        }\r\n        this.updateSearchPhrase = this.updateSearchPhrase.bind(this);\r\n    }\r\n\r\n    updateSearchPhrase = (phrase) => {\r\n        this.setState({\r\n            searchPhrase: phrase\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        console.log(\"test\");\r\n        const query = this.state.searchPhrase;\r\n        console.log(query);\r\n        // console.log(process.env.REACT_APP_GOOGLE_API_KEY)\r\n        const url = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=${GOOGLE_API_KEY}&radius=100000&location=38.0293,-78.4767&type=restaurant&keyword=${query}`;\r\n\r\n        // let request = new XMLHttpRequest()\r\n\r\n        // request.onreadystatechange = function () {\r\n        //     if (request.readyState == XMLHttpRequest.DONE) {\r\n        //         alert(request.responseText);\r\n        //     }\r\n        // }\r\n        // request.open('GET', url, true)\r\n        // request.onload = function () {\r\n        //     // Begin accessing JSON data here\r\n        //     var data = JSON.parse(this.response)\r\n\r\n        //     console.log(\"request\")\r\n        //     console.log(data);\r\n        // if (request.status >= 200 && request.status < 400) {\r\n        //     data.forEach(movie => {\r\n        //         console.log(movie.title)\r\n        //     })\r\n        // } else {\r\n        //     console.log('error')\r\n        // }\r\n        // }\r\n\r\n        fetch(url)\r\n            .then(\r\n                response => {\r\n                    // console.log(response);\r\n                    response.json()\r\n                }\r\n            ).then(\r\n                data => {\r\n                    // console.log(data);\r\n                    this.props.setData(data);\r\n                }\r\n            ).catch(error => console.log(error));\r\n\r\n    }\r\n\r\n    passSearchInput = (SearchText) => {\r\n        console.log(SearchText);\r\n        this.setState(() => {\r\n            return {\r\n                SearchText: document.getElementById(\"SearchText\").value\r\n\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const sortVars = [\"Prominence\",\r\n            \"Price (Lowest to Highest)\",\r\n            \"Price (Highest to Lowest)\",\r\n            \"Rating\",\r\n            \"Open Now\"]\r\n        return (\r\n            <div>\r\n                <Container className=\"TopPanel\">\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <h3>Charlottesville Restaurant Search</h3>\r\n                            <Form.Control\r\n                                onChange={(e) => this.updateSearchPhrase(e.target.value)}\r\n                                id=\"SearchText\"\r\n                                className=\"SearchBar\"\r\n                                type=\"textarea\"\r\n                                placeholder=\"Search for a Charlottesville restaurant\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Button onClick={this.getData}>Search</Button>\r\n\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Sort by...</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {sortVars.map(field => {\r\n                                return <Dropdown.Item onClick={() => this.props.setSort(field)}>{field}</Dropdown.Item>\r\n                            })}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Container>\r\n            </div >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class List extends Component {\r\n    arrangeList = (field) => {\r\n        if (field === \"Prominence\") {\r\n            return this.props.restaurants;\r\n        }\r\n        if (field === \"Open now\") {\r\n            return this.props.restaurant.filter(place => place.opening_hours.open_now)\r\n        }\r\n        let sortFunc;\r\n        switch (field) {\r\n            case \"Price (Lowest to Highest)\":\r\n                sortFunc = (place, place2) => {\r\n                    // console.log(\"sorting\")\r\n                    let price1 = parseInt(place.price_level) || 1000;\r\n                    let price2 = parseInt(place2.price_level) || 1000\r\n                    // console.log(i + \" \" + i2);\r\n                    return price1 - price2 // low price first\r\n                }\r\n                break;\r\n            case \"Price (Highest to Lowest)\":\r\n                sortFunc = (place, place2) => {\r\n                    // console.log(\"sorting\")\r\n                    let price1 = parseInt(place.price_level) || 1000;\r\n                    let price2 = parseInt(place2.price_level) || 1000\r\n                    // console.log(i + \" \" + i2);\r\n                    return -(price1 - price2) // high price first\r\n                }\r\n                break;\r\n            case \"Rating\":\r\n                sortFunc = (place, place2) => {\r\n                    let rating1 = parseFloat(place.rating) || -10;\r\n                    let rating2 = parseFloat(place2.rating) || -10;\r\n                    return -(rating1 - rating2); // highest comes first\r\n                }\r\n                break;\r\n        }\r\n\r\n        return this.props.restaurants.sort(sortFunc);\r\n    }\r\n    render() {\r\n        const restaurants = this.props.restaurants;\r\n        let count = 0;\r\n\r\n        return <div style={{ textAlign: \"left\" }}>\r\n            <Accordion >\r\n                {this.arrangeList(this.props.sortField)\r\n                    .map(restaurant => {\r\n                        return (\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={count + \"\"}>\r\n                                        {restaurant.name} {restaurant.price_level != null ? \"- \" + \"$\".repeat(restaurant.price_level) : \"\"}\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey={count++ + \"\"}>\r\n                                    <Card.Body>\r\n                                        Rating - {restaurant.rating}\r\n                                        <br></br>Location - {restaurant.vicinity}\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n            </Accordion>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\n// import \r\n\r\nexport default class RestaurantMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayRestaurant: null,\r\n        }\r\n    }\r\n\r\n    changeDisplayRestaurant = (rest) => {\r\n        this.setState({\r\n            displayRestaurant: rest\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //map.setView(new L.LatLng(38.0293, -78.4767),9);\r\n\r\n    render() {\r\n        const restaurants = this.props.restaurants;\r\n        return <Map center={[38.0293, -78.4767]} zoom={13} style={{ height: \"100vh\", width: \"100%\" }}>\r\n            {this.state.displayRestaurant !== null && <Popup\r\n                position={[\r\n                    this.state.displayRestaurant.geometry.location.lat,\r\n                    this.state.displayRestaurant.geometry.location.lng\r\n                ]}\r\n                onClose={() => {\r\n                    this.changeDisplayRestaurant(null);\r\n                }}\r\n            >\r\n                <h6>{this.state.displayRestaurant.name} {this.state.displayRestaurant.price_level != null ? \"- \" + \"$\".repeat(this.state.displayRestaurant.price_level) : \"\"}</h6>\r\n                <p>{this.state.displayRestaurant.opening_hours.open_now ? \"Open now\" : \"Currently closed\"}\r\n                    <br />Rating - {this.state.displayRestaurant.rating} <br />\r\n                Location - {this.state.displayRestaurant.vicinity}</p></Popup>}\r\n            {/* {activePark && (\r\n                <Popup\r\n                    position={[\r\n                        activePark.geometry.coordinates[1],\r\n                        activePark.geometry.coordinates[0]\r\n                    ]}\r\n                    onClose={() => {\r\n                        setActivePark(null);\r\n                    }}\r\n                >} */}\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {restaurants.map(restaurant => {\r\n                return <Marker\r\n                    key={restaurant.id}\r\n                    position={\r\n                        [\r\n                            restaurant.geometry.location.lat,\r\n                            restaurant.geometry.location.lng\r\n                        ]}\r\n                    onClick={() => {\r\n                        this.changeDisplayRestaurant(restaurant);\r\n                    }} />\r\n            })}\r\n        </Map>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TopPanel from './TopPanel';\r\nimport List from \"./List\";\r\nimport RestaurantMap from \"./Map\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst dummyData = {\r\n  \"html_attributions\" : [],\r\n  \"results\" : [\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.02989309999999,\r\n              \"lng\" : -78.47547689999999\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.03116758029149,\r\n                 \"lng\" : -78.47417291970849\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0284696197085,\r\n                 \"lng\" : -78.4768708802915\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"e4e27f433db07955f9786c2afc40de52f394d9e0\",\r\n        \"name\" : \"Guadalajara\",\r\n        \"opening_hours\" : {\r\n           \"open_now\" : false\r\n        },\r\n        \"photos\" : [\r\n           {\r\n              \"height\" : 3036,\r\n              \"html_attributions\" : [\r\n                 \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/108731974968542679979\\\"\\u003eJason Gale\\u003c/a\\u003e\"\r\n              ],\r\n              \"photo_reference\" : \"CmRaAAAAwwtAAU146gIfkqirIA7whXbjcrOR_uFFeAXkRXNTjYaZAxk-Z7FTf9VRmLmI6nGcsS0BJlgJrkIvgstuoy1ANLLgE9Dm6pvZMDUFRajC4auvLuoNPsCy25CSm--XjkXNEhBCtfHPYLpPn-YYjys2UjD9GhQRt8vDRRXxFOI7G6pqzPfDWfMwSg\",\r\n              \"width\" : 4048\r\n           }\r\n        ],\r\n        \"place_id\" : \"ChIJTyKzYieGs4kREUCGOYLpk6c\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GHF+XR Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GHF+XR\"\r\n        },\r\n        \"price_level\" : 1,\r\n        \"rating\" : 4.3,\r\n        \"reference\" : \"ChIJTyKzYieGs4kREUCGOYLpk6c\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"user_ratings_total\" : 430,\r\n        \"vicinity\" : \"805 East Market Street, Charlottesville\"\r\n     },\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.0295669,\r\n              \"lng\" : -78.47796000000001\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.0312143802915,\r\n                 \"lng\" : -78.4767912197085\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0285164197085,\r\n                 \"lng\" : -78.47948918029152\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"faf20e6a2e1d1c1bdee9c0790ea640c51348a1ea\",\r\n        \"name\" : \"Himalayan Fusion\",\r\n        \"opening_hours\" : {\r\n           \"open_now\" : false\r\n        },\r\n        \"photos\" : [\r\n           {\r\n              \"height\" : 3024,\r\n              \"html_attributions\" : [\r\n                 \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/115451595125996928003\\\"\\u003eAndrew Nash\\u003c/a\\u003e\"\r\n              ],\r\n              \"photo_reference\" : \"CmRaAAAAOvF8pd70pFG6-QdhwcXz-lBcDtBhLDaEVC4-qjyhjlw73XSRQ5HULIOGQpnqV4gVR6QBKVr7-DtiVNyiPdGblaRtXtOd18Ez3CKyb8OxpPC6MWe9EBoZExbkxLCeJdzeEhBmOVBNGHf3DlIhwvS4uD2IGhQMqPl7o3ors_iMrW4eHBu9kEDlSg\",\r\n              \"width\" : 4032\r\n           }\r\n        ],\r\n        \"place_id\" : \"ChIJhWefHSeGs4kREuONhoJL21w\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GHC+RR Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GHC+RR\"\r\n        },\r\n        \"price_level\" : 2,\r\n        \"rating\" : 4.4,\r\n        \"reference\" : \"ChIJhWefHSeGs4kREuONhoJL21w\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"user_ratings_total\" : 225,\r\n        \"vicinity\" : \"520 East Main Street, Charlottesville\"\r\n     },\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.0293059,\r\n              \"lng\" : -78.47667810000002\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.0306548802915,\r\n                 \"lng\" : -78.4753291197085\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0279569197085,\r\n                 \"lng\" : -78.47802708029151\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"f8cf266a1becf5034ce18c9fa5c44bae5002699e\",\r\n        \"name\" : \"Wood grill\",\r\n        \"place_id\" : \"ChIJFTjpjE-Hs4kRYdAOnc-m1j8\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GHF+P8 Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GHF+P8\"\r\n        },\r\n        \"reference\" : \"ChIJFTjpjE-Hs4kRYdAOnc-m1j8\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"vicinity\" : \"Charlottesville\"\r\n     },\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.0293059,\r\n              \"lng\" : -78.47667810000002\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.0306548802915,\r\n                 \"lng\" : -78.4753291197085\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0279569197085,\r\n                 \"lng\" : -78.47802708029151\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"ceef8f1f7080ab5a40a6fb9371b6380b1091a6c7\",\r\n        \"name\" : \"Azteca\",\r\n        \"place_id\" : \"ChIJpS2T_yaHs4kRJmEoIgiGNGA\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GHF+P8 Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GHF+P8\"\r\n        },\r\n        \"reference\" : \"ChIJpS2T_yaHs4kRJmEoIgiGNGA\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"vicinity\" : \"Charlottesville\"\r\n     },\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.0298817,\r\n              \"lng\" : -78.4779606\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.0312800302915,\r\n                 \"lng\" : -78.47679921970848\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0285820697085,\r\n                 \"lng\" : -78.4794971802915\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"b293e1c62a7524b6ced92d156f9b9d1e08c5736b\",\r\n        \"name\" : \"Bashir's\",\r\n        \"opening_hours\" : {\r\n           \"open_now\" : false\r\n        },\r\n        \"photos\" : [\r\n           {\r\n              \"height\" : 3024,\r\n              \"html_attributions\" : [\r\n                 \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/115451595125996928003\\\"\\u003eAndrew Nash\\u003c/a\\u003e\"\r\n              ],\r\n              \"photo_reference\" : \"CmRaAAAA9EKZ-cLAG0GsgD9hZ3-ASAhywdZpm-vMs6AO2L0Dv8WYfF6hreCak0nz6JBX1ZBazTStBqrcsDRfpwfLda01_SG6JndRz2oprgxiRm0IMukHDZCWfUfDSKMSePQwegR6EhAENggLA5wPp28iWgS39PNXGhTiwI4IBqzbg3HMB2uGX236k6a5Lg\",\r\n              \"width\" : 4032\r\n           }\r\n        ],\r\n        \"place_id\" : \"ChIJHU0E4yaGs4kRuCzvGoFNmzI\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GHC+XR Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GHC+XR\"\r\n        },\r\n        \"price_level\" : 2,\r\n        \"rating\" : 4.2,\r\n        \"reference\" : \"ChIJHU0E4yaGs4kRuCzvGoFNmzI\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"user_ratings_total\" : 42,\r\n        \"vicinity\" : \"507 East Main Street, Charlottesville\"\r\n     },\r\n     {\r\n        \"business_status\" : \"OPERATIONAL\",\r\n        \"geometry\" : {\r\n           \"location\" : {\r\n              \"lat\" : 38.0303811,\r\n              \"lng\" : -78.47693819999999\r\n           },\r\n           \"viewport\" : {\r\n              \"northeast\" : {\r\n                 \"lat\" : 38.0316679302915,\r\n                 \"lng\" : -78.4756239197085\r\n              },\r\n              \"southwest\" : {\r\n                 \"lat\" : 38.0289699697085,\r\n                 \"lng\" : -78.4783218802915\r\n              }\r\n           }\r\n        },\r\n        \"icon\" : \"https://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png\",\r\n        \"id\" : \"6329a5f26091b592351081c47b690cdb3b5397aa\",\r\n        \"name\" : \"Tin Whistle Pub\",\r\n        \"opening_hours\" : {\r\n           \"open_now\" : false\r\n        },\r\n        \"photos\" : [\r\n           {\r\n              \"height\" : 3024,\r\n              \"html_attributions\" : [\r\n                 \"\\u003ca href=\\\"https://maps.google.com/maps/contrib/105509553038982717852\\\"\\u003eAndrew Warren\\u003c/a\\u003e\"\r\n              ],\r\n              \"photo_reference\" : \"CmRaAAAAGCS3TraqnC3CIDkGsCl52g_Dp85S3ffR5Ud6PSkk2WU36UzY3eQTo9qXzgZlbjEOIaP6HJNA15WVN5QDF6T_bp6XJMGxI5t99ZvmyVT-u1_kEFWDBUS_MHHI8rWVdea7EhBerDVb9pXXYXdvC1d1Auk0GhT8diY4ya2pDkHQudkqLEzXnmqvDg\",\r\n              \"width\" : 4032\r\n           }\r\n        ],\r\n        \"place_id\" : \"ChIJsbbhByeGs4kRnOf5pBSDiCQ\",\r\n        \"plus_code\" : {\r\n           \"compound_code\" : \"2GJF+56 Charlottesville, Virginia, United States\",\r\n           \"global_code\" : \"87C32GJF+56\"\r\n        },\r\n        \"price_level\" : 2,\r\n        \"rating\" : 4.5,\r\n        \"reference\" : \"ChIJsbbhByeGs4kRnOf5pBSDiCQ\",\r\n        \"scope\" : \"GOOGLE\",\r\n        \"types\" : [ \"bar\", \"restaurant\", \"food\", \"point_of_interest\", \"establishment\" ],\r\n        \"user_ratings_total\" : 221,\r\n        \"vicinity\" : \"609 East Market Street, Charlottesville\"\r\n     }\r\n  ],\r\n  \"status\" : \"OK\"\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurants: [], // array (will be returned by request)\r\n      SearchText: \"\",\r\n      sortField: \"Prominence\" // default sort returned by Google API\r\n    }\r\n  }\r\n\r\n//   componentDidMount = () => {\r\n//     this.setData(dummyData);\r\n//   }\r\n\r\n  setData = (new_data) => {\r\n    if (new_data.status === \"OK\") {\r\n      this.setState({ restaurants: new_data.results })\r\n    }\r\n  }\r\n\r\n  // debugging method, will delete\r\n  test = () => {\r\n    console.log(this.state.data)\r\n  }\r\n\r\n  setSort = (field) => {\r\n    // console.log(\"button clicked\");\r\n    // console.log(field);\r\n    this.setState({sortField: field})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TopPanel\r\n          setData={this.setData}\r\n          passSearchInput={this.passSearchInput} \r\n          setSort={this.setSort}/>\r\n        <div className=\"display\">\r\n          <List restaurants={this.state.restaurants} \r\n          display={this.state.displayRestaurant} \r\n          sortField={this.state.sortField}/>\r\n          <RestaurantMap restaurants={this.state.restaurants} changeDisplayRestaurant={this.changeDisplayRestaurant} />\r\n          {/* <button onClick={this.test}>Print App.js data</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}